name: Playwright test reusable workflow

on:
  workflow_call:
    inputs:
      db:
        required: true
        type: string

jobs:
  playwright:
    runs-on: ubuntu-20.04
    steps:
      # Reference: https://github.com/pierotofy/set-swap-space/blob/master/action.yml
      - name: Set 5gb swap
        shell: bash
        # Delete the swap file, allocate a new one, and activate it
        run: |
            export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
            sudo swapoff $SWAP_FILE
            sudo rm $SWAP_FILE
            sudo fallocate -l 5G $SWAP_FILE
            sudo chmod 600 $SWAP_FILE
            sudo mkswap $SWAP_FILE
            sudo swapon $SWAP_FILE
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules

        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: install dependencies nocodb-sdk
        working-directory: ./packages/nocodb-sdk
        run: npm install
      - name: build nocodb-sdk
        working-directory: ./packages/nocodb-sdk
        run: npm run build
      - name: setup mysql
        if: ${{ inputs.db == 'mysql' }}
        working-directory: ./
        run: docker-compose -f ./scripts/playwright/scripts/docker-compose-playwright.yml up -d &
      - name: run frontend
        working-directory: ./packages/nc-gui
        run: npm run ci:run
      - name: Run backend
        working-directory: ./packages/nocodb
        run: npm run ci:run
      - name: Cache playwright npm modules
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            **/playwright/node_modules
          key: cache-playwright-${{ hashFiles('**/playwright/package-lock.json') }}
      - name: Install dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: ./scripts/playwright
        run: npm install
      - name: Install Playwright Browsers
        working-directory: ./scripts/playwright
        run: npx playwright install chromium --with-deps
      - name: Wait for backend
        run: |
          while ! curl --output /dev/null --silent --head --fail http://localhost:8080; do
            printf '.'
            sleep 2
          done
      - name: Run Playwright tests
        working-directory: ./scripts/playwright
        run: npm run ci:test:mysql
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./scripts/playwright/playwright-report/
          retention-days: 2
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend logs
          path: ./packages/nocodb/mysql_test_backend.log
          retention-days: 2