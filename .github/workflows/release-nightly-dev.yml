name: 'NocoDB Nightly Dev Release'

on:
  # Triggered manually
  workflow_dispatch:
  schedule:
    # every 6 hours
    - cron: '0 */6 * * *'

jobs:
  # enrich tag for nightly auto release
  set-tag:
    runs-on: 'ubuntu-latest'
    steps:
      - name: set-tag
        id: tag-step
        run: |
          # Get current date
          CURRENT_DATE=$(date +"%Y%m%d")
          CURRENT_TIME=$(date +"%H%M")
          TAG_NAME=${CURRENT_DATE}-${CURRENT_TIME}
          IS_DAILY='Y'
          # Get current version
          CURRENT_VERSION=$(basename $(curl -fs -o/dev/null -w %{redirect_url} https://github.com/nocodb/nocodb/releases/latest))
          # Set the tag
          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            IS_DAILY='N'
          fi
          echo "NIGHTLY_BUILD_TAG=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "IS_DAILY=${IS_DAILY}" >> $GITHUB_OUTPUT
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          # verify
          echo NIGHTLY_BUILD_TAG: ${{ env.NIGHTLY_BUILD_TAG }}
          echo IS_DAILY: ${{ env.IS_DAILY }}
          echo CURRENT_VERSION: ${{ env.CURRENT_VERSION }}
  # Build frontend and backend and publish to npm
  release-npm:
    needs: set-tag
    uses: ./.github/workflows/release-npm.yml
    with:
      tag: ${{ env.NIGHTLY_BUILD_TAG }}
      targetEnv: 'DEV'
    secrets:
      NPM_TOKEN: "${{ secrets.NPM_TOKEN }}"

  # Build executables and publish to GitHub
  release-executables:
    needs: [set-tag, release-npm]
    uses: ./.github/workflows/release-timely-executables.yml
    with:
      tag: ${{ env.CURRENT_VERSION }}-${{ env.NIGHTLY_BUILD_TAG }}
    secrets:
      NC_GITHUB_TOKEN: "${{ secrets.NC_GITHUB_TOKEN }}"

  # Build docker image and push to docker hub
  release-docker:
    needs: [set-tag, release-npm]
    uses: ./.github/workflows/release-docker.yml
    with:
      currentVersion: ${{ env.CURRENT_VERSION }}
      tag: ${{ env.NIGHTLY_BUILD_TAG }}
      targetEnv: 'DEV'
      isDaily: ${{ env.IS_DAILY }}
    secrets:
      DOCKERHUB_USERNAME: "${{ secrets.DOCKERHUB_USERNAME }}"
      DOCKERHUB_TOKEN: "${{ secrets.DOCKERHUB_TOKEN }}"
